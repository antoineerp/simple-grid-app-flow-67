
# Activer la réécriture d'URL
RewriteEngine On

# Définir les types MIME PHP
AddType application/x-httpd-php .php
AddHandler application/x-httpd-php .php

# Forcer l'exécution PHP pour tous les fichiers .php
<FilesMatch "\.php$">
    SetHandler application/x-httpd-php
    ForceType application/x-httpd-php
    Order Allow,Deny
    Allow from all
</FilesMatch>

# S'assurer que les fichiers PHP existants sont traités correctement
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule \.(php)$ - [L]

# Traitement spécifique pour php-execution-test.php
<Files php-execution-test.php>
    ForceType application/x-httpd-php
    Header set Content-Type "application/json; charset=UTF-8"
</Files>

# Traitement spécifique pour login-system-check.php
<Files login-system-check.php>
    ForceType application/x-httpd-php
    Header set Content-Type "text/html; charset=UTF-8"
</Files>

# Traitement spécifique pour assets-check.php
<Files assets-check.php>
    ForceType application/x-httpd-php
    Header set Content-Type "text/html; charset=UTF-8"
</Files>

# Rediriger toutes les requêtes vers l'index.php sauf pour les fichiers existants
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php [QSA,L]

# Définir les en-têtes CORS
<IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE"
    Header set Access-Control-Allow-Headers "Content-Type, Authorization"
    
    # Eviter la mise en cache
    Header set Cache-Control "no-cache, no-store, must-revalidate"
    Header set Pragma "no-cache"
    Header set Expires 0
</IfModule>

# Forcer PHP à utiliser le bon encodage
<IfModule mod_php.c>
    php_value default_charset "UTF-8"
    php_value output_buffering Off
</IfModule>
