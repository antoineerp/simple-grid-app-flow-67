
name: Deploy to Infomaniak

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install Dependencies
      run: npm install
      
    - name: Build React App
      run: npm run build
      
    - name: Copy additional files
      run: |
        cp .htaccess dist/ || echo "No .htaccess file found"
        mkdir -p dist/api
        cp -r api/* dist/api/ || echo "No api files found"
        mkdir -p dist/public/lovable-uploads
        cp -r public/lovable-uploads/* dist/public/lovable-uploads/ || echo "No lovable-uploads files found"
        cp deploy-check.php dist/ || echo "No deploy-check.php found"
        cp verify-deploy.php dist/ || echo "No verify-deploy.php found"
        cp index.html dist/ || echo "No index.html found (this should not happen)"
        
    - name: List build directory structure
      run: |
        echo "Listing full directory structure:"
        find dist -type f | sort
        echo "==========================="
        echo "Checking key files:"
        ls -la dist/index.html || echo "index.html NOT FOUND!"
        ls -la dist/assets/ || echo "assets directory NOT FOUND!"
        ls -la dist/assets/index.js || echo "index.js NOT FOUND!"
        ls -la dist/assets/index.css || echo "index.css NOT FOUND!"
        ls -la dist/api/ || echo "api directory NOT FOUND!"
        
    - name: Deploy to Infomaniak
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: /
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          README.md
          package.json
          package-lock.json
          tsconfig*.json
          src/**
        log-level: verbose
        timeout: 120000
        
    - name: Post-deployment verification
      run: |
        echo "Deployment completed. Check logs for any errors."
        echo "Run verify-deploy.php on your server to diagnostiquer l'état du déploiement."
        echo "URL: https://qualiopi.ch/verify-deploy.php"
