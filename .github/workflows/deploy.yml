name: Deploy to Infomaniak

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install Dependencies
      run: npm install
      
    - name: Build React App
      run: npm run build
      
    - name: Debug build output
      run: |
        echo "============== Debugging build output =============="
        echo "Liste des fichiers dans dist:"
        ls -la dist/
        echo "Liste des fichiers assets:"
        ls -la dist/assets/ || echo "Dossier assets non trouvé"
        echo "Contenu de index.html:"
        cat dist/index.html || echo "index.html non trouvé"

    - name: Copy PHP files and prepare for deployment
      run: |
        # Copy index.php to dist directory
        cp -v index.php dist/ || echo "index.php not found"
        
        # Ensure index.html exists in dist
        if [ ! -f dist/index.html ]; then
          echo "Warning: index.html not found in dist, copying from source"
          cp -v index.html dist/ || echo "index.html not found in source either"
        fi
        
        # Ensure index.php is the default handler
        echo "DirectoryIndex index.php index.html" > dist/.htaccess
        cat .htaccess >> dist/.htaccess
        
        # Create all necessary directories
        mkdir -p dist/api/config
        mkdir -p dist/api/controllers
        mkdir -p dist/api/middleware
        mkdir -p dist/api/models
        mkdir -p dist/api/utils
        mkdir -p dist/api/operations
        mkdir -p dist/api/operations/users
        mkdir -p dist/public/lovable-uploads
        
        # Copy API files
        cp -rv api/* dist/api/ || echo "Attention: Problèmes avec la copie des fichiers API"
        
        # Copy utility PHP files
        cp -v fix-assets-runtime.php dist/ || echo "Attention: fix-assets-runtime.php non trouvé"
        cp -v fix-index-references.php dist/ || echo "Attention: fix-index-references.php non trouvé"
        cp -v utils-assets.php dist/ || echo "Attention: utils-assets.php non trouvé"
        cp -v utils-directory.php dist/ || echo "Attention: utils-directory.php non trouvé"
        cp -v index-validator.php dist/ || echo "Attention: index-validator.php non trouvé"
        cp -v assets-finder.php dist/ || echo "Attention: assets-finder.php non trouvé"
        
        # Copy lovable uploads
        cp -rv public/lovable-uploads/* dist/public/lovable-uploads/ || echo "Aucun fichier d'upload trouvé"

    - name: Run post-build script to fix index references
      run: |
        echo "Running post-build script to ensure index.html is correct..."
        cd dist
        # Créer un script temporaire pour vérifier les assets
        cat > check-assets.php << 'EOF'
        <?php
        $assets_js = glob('./assets/*.js');
        $assets_css = glob('./assets/*.css');
        echo "Found JS assets: " . implode(", ", $assets_js) . "\n";
        echo "Found CSS assets: " . implode(", ", $assets_css) . "\n";
        
        // Vérifier index.html
        $index_content = file_get_contents('./index.html');
        echo "Index.html content:\n";
        echo substr($index_content, 0, 1000) . "...\n";
        ?>
        EOF
        
        php check-assets.php
        cd ..

    - name: Check structure before deployment
      run: |
        echo "Verifying structure before deployment:"
        echo "Root files:"
        ls -la dist/
        echo "API files:"
        ls -la dist/api/

    - name: Sync full dist folder to Infomaniak server
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: /sites/qualiopi.ch/
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          README.md
          package.json
          package-lock.json
          tsconfig*.json
          *.log
        log-level: verbose
        timeout: 120000
        dry-run: false
    
    - name: Post-deployment verification
      run: |
        echo "Déploiement terminé. Vérifiez les logs pour toute erreur."
        echo "Exécutez fix-assets-runtime.php sur votre serveur pour vérifier l'état du déploiement."
        echo "URL: https://qualiopi.ch/fix-assets-runtime.php"
        echo "Vérifiez également: https://qualiopi.ch/fix-index-references.php"
        echo "Vérifiez les chemins avec: https://qualiopi.ch/infomaniak-paths-check.php"
