
name: Deploy to Infomaniak

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install Dependencies
      run: npm install --legacy-peer-deps
      
    - name: Build React App
      run: npm run build
      
    - name: Debug build output
      run: |
        echo "============== Debugging build output =============="
        echo "Liste des fichiers dans dist:"
        ls -la dist/
        echo "Liste des fichiers assets:"
        ls -la dist/assets/ || echo "Dossier assets non trouvé"
        echo "Contenu de index.html:"
        cat dist/index.html || echo "Fichier index.html non trouvé"

    - name: Prepare deployment directory
      run: |
        # Création des dossiers nécessaires
        mkdir -p deploy/assets
        mkdir -p deploy/api
        mkdir -p deploy/api/config
        mkdir -p deploy/api/services
        mkdir -p deploy/api/controllers
        mkdir -p deploy/api/models
        mkdir -p deploy/api/models/traits
        mkdir -p deploy/api/middleware
        mkdir -p deploy/api/operations
        mkdir -p deploy/api/utils
        mkdir -p deploy/public/lovable-uploads
        
        # Copie du contenu du dossier dist à la racine du déploiement
        echo "Copie de index.html à la racine..."
        cp dist/index.html deploy/
        
        # Copie des fichiers assets AVANT tout script de correction
        echo "Copie des assets..."
        cp -r dist/assets/* deploy/assets/
        ls -la deploy/assets/
        
        # Création d'un backup des assets pour référence
        mkdir -p deploy/dist/assets
        cp -r dist/assets/* deploy/dist/assets/
        
        # Copie des autres fichiers nécessaires
        cp .htaccess deploy/ || echo "Fichier .htaccess non trouvé"
        cp fix-assets-auto.php deploy/ || echo "Fichier fix-assets-auto.php non trouvé"
        
        # Copie des fichiers de l'API
        if [ -d "api" ]; then
          echo "Copie des fichiers API..."
          cp -r api/* deploy/api/
        else
          echo "Dossier API non trouvé"
        fi
        
        # Copie des uploads si existants
        if [ -d "public/lovable-uploads" ]; then
          echo "Copie des uploads..."
          cp -r public/lovable-uploads/* deploy/public/lovable-uploads/ || echo "Copie des uploads échouée"
        else
          echo "Dossier uploads non trouvé"
        fi
        
        # Vérification finale des assets
        echo "Contenu final du dossier assets:"
        ls -la deploy/assets/
        
        echo "Structure du dossier de déploiement:"
        find deploy -type f | sort | head -n 20

    - name: Sync to Infomaniak server
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deploy/
        server-dir: /sites/qualiopi.ch/
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/api-tools/**
          **/api/admin/**
          **/api/documentation/**
          README.md
          package.json
          package-lock.json
        log-level: verbose
        timeout: 120000
    
    - name: Run Fix-Assets Script (if server supports it)
      run: |
        echo "Exécution du script de réparation des assets via curl..."
        curl -s "${{ secrets.SITE_URL }}/fix-assets-auto.php" || echo "Échec de l'exécution du script de réparation"
        echo "Script de réparation terminé"

    - name: Clean up
      run: |
        rm -rf deploy
        rm -rf dist
