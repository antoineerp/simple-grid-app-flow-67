
name: Build Application

on:
  push:
    branches: [ main ]  # Déclenche le workflow quand il y a un push sur la branche main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Récupère tout l'historat pour une meilleure compatibilité
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Update caniuse-lite
      run: |
        echo "Mise à jour de caniuse-lite vers la dernière version..."
        npm install -D caniuse-lite@latest
    
    - name: Create build directories first
      run: |
        mkdir -p dist
        mkdir -p dist/public
        mkdir -p dist/public/lovable-uploads
        mkdir -p api
        echo "Created directories structure"
        ls -la
    
    - name: Copy static assets before build
      run: |
        mkdir -p public/lovable-uploads
        cp -r public/* dist/public/ || echo "No public files to copy initially"
    
    - name: Build project
      run: |
        echo "Starting build process..."
        npx vite build
        echo "Build process completed"
    
    - name: Copy necessary files to dist
      run: |
        # Copy API files
        mkdir -p dist/api
        mkdir -p dist/api/config
        mkdir -p dist/api/controllers
        mkdir -p dist/api/models
        mkdir -p dist/api/middleware
        mkdir -p dist/api/utils
        
        cp -r api/* dist/api/ 2>/dev/null || echo "No API files to copy"
        cp .htaccess dist/ 2>/dev/null || echo "No .htaccess file to copy"
        
        # Copy public assets to dist/public
        mkdir -p dist/public/lovable-uploads
        cp -r public/lovable-uploads/* dist/public/lovable-uploads/ 2>/dev/null || echo "No uploaded files to copy"
        cp -r public/logo-swiss.svg dist/public/ 2>/dev/null || echo "No logo file to copy"
        
        # Create a php.ini file for Infomaniak
        echo "; Configuration PHP" > dist/api/php.ini
        echo "display_errors = Off" >> dist/api/php.ini
        echo "log_errors = On" >> dist/api/php.ini
        echo "error_log = /tmp/php-errors.log" >> dist/api/php.ini
        echo "default_charset = UTF-8" >> dist/api/php.ini
    
    - name: Create test file to verify deployment
      run: |
        echo '<?php echo "Deployment successful at " . date("Y-m-d H:i:s"); ?>' > dist/deploy-test.php
    
    - name: Verify final artifacts
      run: |
        echo "Structure finale des fichiers:"
        ls -la dist
        echo "Contenu du répertoire assets dans dist:"
        ls -la dist/assets || echo "Le répertoire assets n'existe pas dans dist"
        echo "Contenu du répertoire public dans dist:"
        ls -la dist/public || echo "Le répertoire public n'existe pas dans dist"
        echo "Contenu du répertoire lovable-uploads dans dist/public:"
        ls -la dist/public/lovable-uploads || echo "Le répertoire lovable-uploads n'existe pas dans dist/public"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: dist

