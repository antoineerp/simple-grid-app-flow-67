
name: Build Application

on:
  push:
    branches: [ main ]  # Déclenche le workflow quand il y a un push sur la branche main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Debug - Environment & Repository
      run: |
        echo "Working directory:"
        pwd
        echo "Repository contents:"
        ls -la
        echo "Node & NPM versions:"
        node -v
        npm -v
        echo "Package.json content:"
        cat package.json
    
    - name: Install dependencies
      run: npm ci
      # Nous retirons continue-on-error pour s'assurer que les dépendances s'installent correctement
    
    - name: Create build directories first
      run: |
        mkdir -p dist
        mkdir -p api
        echo "Created directories structure"
        ls -la
    
    - name: Build project
      run: |
        echo "Starting build process..."
        npm run build
        echo "Build process completed"
    
    - name: Debug - Post build files
      run: |
        echo "Contenu du répertoire racine après build:"
        ls -la
        
        echo "Contenu du répertoire dist (s'il existe):"
        ls -la dist || echo "Le répertoire dist n'existe pas ou est inaccessible"
        
        echo "Contenu du répertoire api (s'il existe):"
        ls -la api || echo "Le répertoire api n'existe pas ou est inaccessible"
    
    - name: Ensure .htaccess exists
      run: |
        if [ ! -f ".htaccess" ]; then
          echo "Création du fichier .htaccess..."
          echo "# .htaccess generated by GitHub Actions" > .htaccess
          echo "RewriteEngine On" >> .htaccess
          echo "RewriteRule ^api/(.*)$ api/$1 [QSA,L]" >> .htaccess
          echo "RewriteRule ^(?!api/).*$ index.html [QSA,L]" >> .htaccess
          echo ".htaccess créé avec contenu de base:"
          cat .htaccess
        else
          echo ".htaccess existe déjà:"
          cat .htaccess
        fi
    
    - name: Verify final artifacts
      run: |
        echo "Structure finale des fichiers:"
        ls -la
        echo "Contenu du répertoire dist:"
        ls -la dist
        echo "Contenu du répertoire api:"
        ls -la api
        echo "Contenu du fichier .htaccess:"
        cat .htaccess
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: |
          dist
          api
          .htaccess
