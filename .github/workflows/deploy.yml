
name: Deploy to Infomaniak

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for running'
        required: false
        default: 'Manual deployment'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install Dependencies
      run: npm install --legacy-peer-deps
      
    - name: Build React App
      run: npm run build
      
    - name: Debug build output
      run: |
        echo "============== Debugging build output =============="
        echo "Liste des fichiers dans dist:"
        ls -la dist/
        echo "Liste des fichiers assets:"
        ls -la dist/assets/ || echo "Dossier assets non trouvé"
        echo "Liste des fichiers PHP à la racine:"
        find . -maxdepth 1 -name "*.php" | sort

    - name: Prepare deployment directory
      run: |
        # Création des dossiers nécessaires
        mkdir -p deploy/assets
        mkdir -p deploy/api
        mkdir -p deploy/public/lovable-uploads
        
        # Copie des fichiers compilés directement dans assets
        cp -r dist/assets/* deploy/assets/
        
        # Copie des autres fichiers nécessaires
        cp dist/index.html deploy/
        cp .htaccess deploy/ || echo "Fichier .htaccess non trouvé"
        
        # Copie des fichiers PHP à la racine
        echo "Copie des fichiers PHP à la racine..."
        find . -maxdepth 1 -name "*.php" -exec cp {} deploy/ \;
        
        # S'assurer que tous les sous-répertoires existent dans api/
        echo "Création de la structure complète des répertoires API"
        find api -type d | while read dir; do
          mkdir -p "deploy/${dir}"
        done
        
        # Copie complète et récursive du dossier API et tous ses sous-dossiers
        echo "Copie complète et récursive du dossier API..."
        find api -type f -exec cp --parents {} deploy/ \;
        
        # Vérification des fichiers PHP cruciaux sont bien copiés
        echo "Vérification des fichiers PHP cruciaux :"
        [ -f "deploy/api/index.php" ] && echo "- api/index.php: OK" || echo "- api/index.php: MANQUANT"
        [ -f "deploy/api/phpinfo.php" ] && echo "- api/phpinfo.php: OK" || echo "- api/phpinfo.php: MANQUANT" 
        [ -f "deploy/api/test.php" ] && echo "- api/test.php: OK" || echo "- api/test.php: MANQUANT"
        [ -f "deploy/api/env.php" ] && echo "- api/env.php: OK" || echo "- api/env.php: MANQUANT"
        
        # Copie des uploads si existants
        if [ -d "public/lovable-uploads" ]; then
          echo "Copie des uploads..."
          cp -r public/lovable-uploads/* deploy/public/lovable-uploads/
        else
          echo "Dossier uploads non trouvé"
        fi
        
        # S'assurer que les fichiers .htaccess et .user.ini sont copiés dans /api
        if [ -f "api/.htaccess" ]; then
          echo "Copie du fichier .htaccess dans /api..."
          cp api/.htaccess deploy/api/
        else
          echo "Fichier api/.htaccess non trouvé, création d'un fichier par défaut"
          echo "# Configuration Apache pour PHP
<FilesMatch \\.php$>
    SetHandler application/x-httpd-php
</FilesMatch>

# Activation des headers CORS
<IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin \"*\"
    Header set Access-Control-Allow-Methods \"GET, POST, OPTIONS, PUT, DELETE\"
    Header set Access-Control-Allow-Headers \"Content-Type, Authorization, X-Requested-With\"
</IfModule>

# Activation du moteur PHP
<IfModule mod_php.c>
    php_flag engine on
    php_value display_errors 1
    php_value display_startup_errors 1
    php_value error_reporting E_ALL
</IfModule>" > deploy/api/.htaccess
        fi
        
        if [ -f "api/.user.ini" ]; then
          echo "Copie du fichier .user.ini dans /api..."
          cp api/.user.ini deploy/api/
        else
          echo "Fichier api/.user.ini non trouvé, création d'un fichier par défaut"
          echo "; Configuration PHP pour Infomaniak
display_errors = On
error_log = php_errors.log
log_errors = On
engine = On" > deploy/api/.user.ini
        fi
        
        echo "Structure du dossier de déploiement:"
        find deploy -type f | sort | head -n 20
        echo "... et plus de fichiers"

    - name: Sync to Infomaniak server
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deploy/
        server-dir: /sites/qualiopi.ch/
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          README.md
          dist/**
          package.json
          package-lock.json
        log-level: verbose
        timeout: 120000

    - name: Clean up
      run: |
        rm -rf deploy
        rm -rf dist
