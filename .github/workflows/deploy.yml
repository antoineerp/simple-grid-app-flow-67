
name: Deploy to Infomaniak

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install Dependencies
      run: npm install
      
    - name: Build React App
      run: npm run build
      env:
        CI: false # Pour éviter que le build échoue sur des warnings
      
    - name: Debug build output
      run: |
        echo "============== Debugging build output =============="
        echo "Liste des fichiers dans dist:"
        ls -la dist/
        echo "Liste des fichiers assets:"
        ls -la dist/assets/ || echo "Dossier assets non trouvé"
        echo "Contenu de index.html:"
        cat dist/index.html || echo "index.html non trouvé"
        echo "Vérification des emplacements spécifiques:"
        test -d dist && echo "Dossier dist existe" || echo "ERREUR: Dossier dist n'existe pas!"

    - name: Create complete directory structure
      run: |
        echo "Creating all necessary directories..."
        mkdir -p dist/api/config
        mkdir -p dist/api/controllers
        mkdir -p dist/api/middleware
        mkdir -p dist/api/models
        mkdir -p dist/api/utils
        mkdir -p dist/api/operations
        mkdir -p dist/api/operations/users
        mkdir -p dist/public/lovable-uploads
        
        # Ajout du fichier .htaccess à la racine
        cp -v .htaccess dist/ || echo "Attention: .htaccess non trouvé dans la racine"
        
        # Copier les fichiers PHP d'utilitaires
        cp -v fix-assets-runtime.php dist/ || echo "Attention: fix-assets-runtime.php non trouvé"
        cp -v fix-index-references.php dist/ || echo "Attention: fix-index-references.php non trouvé"
        cp -v utils-assets.php dist/ || echo "Attention: utils-assets.php non trouvé"
        cp -v utils-directory.php dist/ || echo "Attention: utils-directory.php non trouvé"
        cp -v index-validator.php dist/ || echo "Attention: index-validator.php non trouvé"
      
    - name: Copy API files with explicit paths
      run: |
        echo "Copying API files with detailed logging..."
        
        # Copier les fichiers principaux de l'API
        cp -v api/index.php dist/api/ || echo "Attention: index.php non trouvé"
        cp -v api/.htaccess dist/api/ || echo "Attention: .htaccess non trouvé"
        cp -v api/.user.ini dist/api/ || echo "Attention: .user.ini non trouvé"
        cp -v api/auth.php dist/api/ || echo "Attention: auth.php non trouvé"
        cp -v api/test.php dist/api/ || echo "Attention: test.php non trouvé"
        cp -v api/info.php dist/api/ || echo "Attention: info.php non trouvé"
        cp -v api/diagnostic.php dist/api/ || echo "Attention: diagnostic.php non trouvé"
        cp -v api/diagnostic-complet.php dist/api/ || echo "Attention: diagnostic-complet.php non trouvé"
        cp -v api/diagnose-assets.php dist/api/ || echo "Attention: diagnose-assets.php non trouvé"
        cp -v api/assets-check.php dist/api/ || echo "Attention: assets-check.php non trouvé"
        cp -v api/php.ini dist/api/ || echo "Attention: php.ini non trouvé"
        cp -v api/login-test.php dist/api/ || echo "Attention: login-test.php non trouvé"
        cp -v api/check-users.php dist/api/ || echo "Attention: check-users.php non trouvé"
        cp -v api/database-config.php dist/api/ || echo "Attention: database-config.php non trouvé"
        cp -v api/users.php dist/api/ || echo "Attention: users.php non trouvé"
        cp -v api/utilisateurs.php dist/api/ || echo "Attention: utilisateurs.php non trouvé"
        
        # Nouveaux fichiers de test à copier
        cp -v api/database-test.php dist/api/ || echo "Attention: database-test.php non trouvé"
        cp -v api/db-test.php dist/api/ || echo "Attention: db-test.php non trouvé"
        cp -v api/test-auth.php dist/api/ || echo "Attention: test-auth.php non trouvé"
        cp -v api/json-test.php dist/api/ || echo "Attention: json-test.php non trouvé"
        cp -v api/simple-json-test.php dist/api/ || echo "Attention: simple-json-test.php non trouvé"
        cp -v api/direct-db-test.php dist/api/ || echo "Attention: direct-db-test.php non trouvé"
        
        # Fichiers de diagnostic supplémentaires
        cp -v api/diagnose.php dist/api/ || echo "Attention: diagnose.php non trouvé"
        cp -v api/diagnose-connection.php dist/api/ || echo "Attention: diagnose-connection.php non trouvé"
        cp -v api/database-diagnostic.php dist/api/ || echo "Attention: database-diagnostic.php non trouvé"
        cp -v api/database-diagnostics.php dist/api/ || echo "Attention: database-diagnostics.php non trouvé"
        cp -v api/db-diagnostic.php dist/api/ || echo "Attention: db-diagnostic.php non trouvé"
        cp -v api/db-info.php dist/api/ || echo "Attention: db-info.php non trouvé"
        cp -v api/db-connection-test.php dist/api/ || echo "Attention: db-connection-test.php non trouvé"
        cp -v api/advanced-diagnostic.php dist/api/ || echo "Attention: advanced-diagnostic.php non trouvé"
        cp -v api/user-diagnostic.php dist/api/ || echo "Attention: user-diagnostic.php non trouvé"
        cp -v api/check-permissions.php dist/api/ || echo "Attention: check-permissions.php non trouvé"
        cp -v api/check-routes.php dist/api/ || echo "Attention: check-routes.php non trouvé"
        
        # Copier les fichiers d'opérations
        cp -v api/operations/BaseOperations.php dist/api/operations/ || echo "Attention: BaseOperations.php non trouvé"
        cp -v api/operations/UserOperations.php dist/api/operations/ || echo "Attention: UserOperations.php non trouvé"
        cp -v api/operations/users/DeleteOperations.php dist/api/operations/users/ || echo "Attention: DeleteOperations.php non trouvé"
        cp -v api/operations/users/GetOperations.php dist/api/operations/users/ || echo "Attention: GetOperations.php non trouvé"
        cp -v api/operations/users/PostOperations.php dist/api/operations/users/ || echo "Attention: PostOperations.php non trouvé"
        cp -v api/operations/users/PutOperations.php dist/api/operations/users/ || echo "Attention: PutOperations.php non trouvé"
        
        # Copier les fichiers de gestion des documents
        cp -v api/documents-load.php dist/api/ || echo "Attention: documents-load.php non trouvé"
        cp -v api/documents-sync.php dist/api/ || echo "Attention: documents-sync.php non trouvé"
        
        # Copier les fichiers de gestion des exigences
        cp -v api/exigences-load.php dist/api/ || echo "Attention: exigences-load.php non trouvé"
        cp -v api/exigences-sync.php dist/api/ || echo "Attention: exigences-sync.php non trouvé"
        
        # Copier les fichiers de gestion des membres
        cp -v api/membres-load.php dist/api/ || echo "Attention: membres-load.php non trouvé"
        cp -v api/membres-sync.php dist/api/ || echo "Attention: membres-sync.php non trouvé"
        
        # Copier les fichiers de gestion de la bibliothèque
        cp -v api/bibliotheque-load.php dist/api/ || echo "Attention: bibliotheque-load.php non trouvé"
        cp -v api/bibliotheque-sync.php dist/api/ || echo "Attention: bibliotheque-sync.php non trouvé"
        
        # Copier les fichiers de configuration
        cp -v api/config/env.php dist/api/config/ || echo "Attention: env.php non trouvé"
        cp -v api/config/env.example.php dist/api/config/ || echo "Attention: env.example.php non trouvé"
        cp -v api/config/database.php dist/api/config/ || echo "Attention: database.php non trouvé"
        cp -v api/config/index.php dist/api/config/ || echo "Attention: index.php config non trouvé"
        cp -v api/config/db_config.json dist/api/config/ || echo "Attention: db_config.json non trouvé" 
        cp -v api/config/db_config.example.json dist/api/config/ || echo "Attention: db_config.example.json non trouvé"
        
        # Copier les contrôleurs
        cp -v api/controllers/AuthController.php dist/api/controllers/ || echo "Attention: AuthController.php non trouvé"
        cp -v api/controllers/UserController.php dist/api/controllers/ || echo "Attention: UserController.php non trouvé"
        cp -v api/controllers/UsersController.php dist/api/controllers/ || echo "Attention: UsersController.php non trouvé"
        cp -v api/controllers/ConfigController.php dist/api/controllers/ || echo "Attention: ConfigController.php non trouvé"
        cp -v api/controllers/DatabaseConfigController.php dist/api/controllers/ || echo "Attention: DatabaseConfigController.php non trouvé"
        cp -v api/controllers/DatabaseTestController.php dist/api/controllers/ || echo "Attention: DatabaseTestController.php non trouvé"
        
        # Copier les middlewares
        cp -v api/middleware/Auth.php dist/api/middleware/ || echo "Attention: Auth.php middleware non trouvé"
        cp -v api/middleware/ResponseHandler.php dist/api/middleware/ || echo "Attention: ResponseHandler.php middleware non trouvé"
        cp -v api/middleware/RequestHandler.php dist/api/middleware/ || echo "Attention: RequestHandler.php middleware non trouvé"
        
        # Copier les modèles
        cp -v api/models/User.php dist/api/models/ || echo "Attention: User.php model non trouvé"
        cp -v api/models/BaseModel.php dist/api/models/ || echo "Attention: BaseModel.php non trouvé"
        cp -v api/models/traits/TableManager.php dist/api/models/traits/ || mkdir -p dist/api/models/traits/ && cp -v api/models/traits/TableManager.php dist/api/models/traits/ || echo "Attention: TableManager.php non trouvé"
        cp -v api/models/traits/UserQueries.php dist/api/models/traits/ || mkdir -p dist/api/models/traits/ && cp -v api/models/traits/UserQueries.php dist/api/models/traits/ || echo "Attention: UserQueries.php non trouvé"
        cp -v api/models/traits/UserValidator.php dist/api/models/traits/ || mkdir -p dist/api/models/traits/ && cp -v api/models/traits/UserValidator.php dist/api/models/traits/ || echo "Attention: UserValidator.php non trouvé"
        
        # Copier les utilitaires
        cp -v api/utils/JwtHandler.php dist/api/utils/ || echo "Attention: JwtHandler.php non trouvé"
        cp -v api/utils/ResponseHandler.php dist/api/utils/ || echo "Attention: ResponseHandler.php non trouvé"
        
        # Copier les utilitaires de diagnostic de base de données
        mkdir -p dist/api/utils/DatabaseDiagnostics
        cp -v api/utils/DatabaseDiagnostics/ConfigTester.php dist/api/utils/DatabaseDiagnostics/ || echo "Attention: ConfigTester.php non trouvé"
        cp -v api/utils/DatabaseDiagnostics/ConsistencyChecker.php dist/api/utils/DatabaseDiagnostics/ || echo "Attention: ConsistencyChecker.php non trouvé"
        cp -v api/utils/DatabaseDiagnostics/PdoTester.php dist/api/utils/DatabaseDiagnostics/ || echo "Attention: PdoTester.php non trouvé"
        
        # Copier tout fichier PHP d'API au cas où
        find api -name "*.php" -type f | while read file; do
          target_dir="dist/$(dirname "$file" | sed 's|^api/||')"
          mkdir -p "$target_dir"
          cp -v "$file" "dist/$file" || echo "Attention: Impossible de copier $file"
        done
        
        # Créer une liste des fichiers non copiés pour référence
        find api -name "*.php" -type f | while read file; do
          if [ ! -f "dist/$file" ]; then
            echo "MANQUANT: $file" >> dist/missing_files.log
          fi
        done

    - name: Copy remaining application files
      run: |
        # Copier les fichiers principaux
        cp -v deploy-on-infomaniak.php dist/ || echo "Attention: deploy-on-infomaniak.php non trouvé"
        cp -v verify-deploy.php dist/ || echo "Attention: verify-deploy.php non trouvé"
        cp -v deploy-check.php dist/ || echo "Attention: deploy-check.php non trouvé"
        cp -v infomaniak-paths-check.php dist/ || echo "Attention: infomaniak-paths-check.php non trouvé"
        cp -v copy-assets.php dist/ || echo "Attention: copy-assets.php non trouvé"
        cp -v verification-build.php dist/ || echo "Attention: verification-build.php non trouvé"
        cp -v verify-assets.php dist/ || echo "Attention: verify-assets.php non trouvé"
        
        # Copier les fichiers uploads avec récursion si le dossier existe
        if [ -d "public/lovable-uploads" ]; then
          cp -r public/lovable-uploads/* dist/public/lovable-uploads/ 2>/dev/null || echo "Aucun fichier d'upload trouvé"
        fi
        
        # Vérifier si le dossier public contient d'autres fichiers importants
        if [ -d "public" ]; then
          find public -type f -not -path "*/lovable-uploads/*" -exec cp -v {} dist/public/ \; 2>/dev/null || echo "Pas d'autres fichiers publics trouvés"
        fi

    - name: Check structure before deployment
      run: |
        echo "Verifying structure before deployment:"
        echo "Root files:"
        ls -la dist/ || echo "ERREUR: dist/ n'existe pas!"
        echo "API files:"
        ls -la dist/api/ || echo "ERREUR: dist/api/ n'existe pas!"
        echo "Assets files:"
        ls -la dist/assets/ || echo "ERREUR: dist/assets/ n'existe pas!"
        
        echo "Checking API test files:"
        ls -la dist/api/*test*.php || echo "Aucun fichier de test trouvé"
        
    - name: Copy assets to root
      run: |
        cp -r dist/assets/* assets/ || mkdir -p assets
        cp dist/index.html . || echo "index.html non trouvé"
        
    - name: Sync full dist folder to Infomaniak server
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: /sites/qualiopi.ch/
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          README.md
          package.json
          package-lock.json
          tsconfig*.json
          *.log
        log-level: verbose
        timeout: 120000
        dry-run: false
        
    - name: FTP logs and details
      if: always()
      run: |
        echo "FTP deployment terminé. Vérification supplémentaire:"
        echo "Variables:"
        echo "Serveur: ${{ secrets.FTP_SERVER }}" | sed 's/./*/g'
        echo "Utilisateur: ${{ secrets.FTP_USERNAME }}" | sed 's/./*/g'
        echo "Dossier local: ./dist/"
        echo "Dossier distant: /sites/qualiopi.ch/"
    
    - name: Post-deployment verification
      run: |
        echo "Déploiement terminé. Vérifiez les logs pour toute erreur."
        echo "Exécutez fix-assets-runtime.php sur votre serveur pour vérifier l'état du déploiement."
        echo "URL: https://qualiopi.ch/fix-assets-runtime.php"
        echo "Vérifiez également: https://qualiopi.ch/fix-index-references.php"
        echo "Vérifiez les chemins avec: https://qualiopi.ch/infomaniak-paths-check.php"
        echo "Vérifiez le déploiement avec: https://qualiopi.ch/deploy-check.php"
        echo "Vérifiez les fichiers API avec: https://qualiopi.ch/api/"
