
name: Build Application

on:
  push:
    branches: [ main ]  # Déclenche le workflow quand il y a un push sur la branche main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Debug - Environment & Repository
      run: |
        echo "Working directory:"
        pwd
        echo "Repository contents:"
        ls -la
        echo "Node & NPM versions:"
        node -v
        npm -v
        echo "Package.json content:"
        cat package.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: |
        echo "Starting build process..."
        npm run build
        echo "Build process completed"
    
    - name: Create necessary directories
      run: |
        mkdir -p dist
        echo "Vérification des répertoires:"
        if [ ! -d "dist" ]; then
          echo "Le répertoire dist n'existe pas, création..."
          mkdir -p dist
          echo "Test file" > dist/test.txt
        fi
        
        echo "Contenu du répertoire racine:"
        ls -la
        
        echo "Contenu du répertoire dist:"
        ls -la dist || echo "Le répertoire dist n'existe pas ou est inaccessible"
        
        echo "Contenu du répertoire api:"
        ls -la api || echo "Le répertoire api n'existe pas ou est inaccessible"
    
    - name: Ensure .htaccess exists
      run: |
        if [ ! -f .htaccess ]; then
          echo "Création du fichier .htaccess..."
          touch .htaccess
          echo "# .htaccess generated by GitHub Actions" > .htaccess
          cat .htaccess
        else
          echo ".htaccess existe déjà:"
          cat .htaccess
        fi
    
    - name: Prepare artifacts for upload
      run: |
        echo "Préparation des artifacts pour upload..."
        if [ ! -d "dist" ]; then mkdir -p dist && echo "dist directory created"; fi
        if [ ! -d "api" ]; then mkdir -p api && echo "api directory created"; fi
        if [ ! -f ".htaccess" ]; then touch .htaccess && echo ".htaccess file created"; fi
        
        echo "Final file structure:"
        ls -la
        ls -la dist || echo "No files in dist"
        ls -la api || echo "No files in api"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: |
          dist
          api
          .htaccess
