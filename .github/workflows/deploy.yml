
name: Deploy to Infomaniak

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install Dependencies
      run: npm install
      
    - name: Build React App
      run: npm run build
      
    - name: Debug build output
      run: |
        echo "============== Debugging build output =============="
        echo "Liste des fichiers dans dist:"
        ls -la dist/
        echo "Liste des fichiers assets:"
        ls -la dist/assets/ || echo "Dossier assets non trouvé"
        echo "Contenu de index.html:"
        cat dist/index.html || echo "index.html non trouvé"

    - name: Create complete directory structure
      run: |
        echo "Creating all necessary directories..."
        mkdir -p dist/api/config
        mkdir -p dist/api/controllers
        mkdir -p dist/api/middleware
        mkdir -p dist/api/models
        mkdir -p dist/api/utils
        mkdir -p dist/public/lovable-uploads
        
        # Ajout du fichier .htaccess à la racine
        cp -v .htaccess dist/ || echo "Attention: .htaccess non trouvé dans la racine"
        
        # Copier les fichiers PHP d'utilitaires et de test
        find . -name "*.php" -not -path "./dist/*" -not -path "./vendor/*" -exec cp -v --parents {} dist/ \; || echo "Attention: problème lors de la copie des fichiers PHP"

    - name: Copy API files with explicit paths
      run: |
        echo "Copying API files with detailed logging..."
        
        # Copier tous les fichiers PHP de l'API, y compris les tests
        cd api
        find . -type f -name "*.php" -exec cp -v --parents {} ../dist/api/ \; || echo "Erreur lors de la copie des fichiers PHP"
        find . -type f -name ".htaccess" -exec cp -v --parents {} ../dist/api/ \; || echo "Erreur lors de la copie des .htaccess"
        find . -type f -name ".user.ini" -exec cp -v --parents {} ../dist/api/ \; || echo "Erreur lors de la copie des .user.ini"
        cd ..
        
    - name: Check structure before deployment
      run: |
        echo "Verifying structure before deployment:"
        echo "Root files:"
        ls -la dist/
        echo "API files:"
        ls -la dist/api/
        echo "API config files:"
        ls -la dist/api/config/
        echo "Public files:"
        ls -la dist/public/ || echo "No public folder"
    
    - name: Test FTP connection
      uses: SamKirkland/FTP-Deploy-Action@4.3.3
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: /sites/qualiopi.ch/
        dry-run: true
        log-level: verbose
        
    - name: Deploy to Infomaniak using FTP
      uses: SamKirkland/FTP-Deploy-Action@4.3.3
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: /sites/qualiopi.ch/
        dangerous-clean-slate: false
        timeout: 120000
    
    - name: Post-deployment verification
      run: |
        echo "Déploiement terminé. Vérifiez les logs pour toute erreur."
        echo "Exécutez fix-assets-runtime.php sur votre serveur pour vérifier l'état du déploiement."
        echo "URL: https://qualiopi.ch/fix-assets-runtime.php"
        echo "Vérifiez également: https://qualiopi.ch/fix-index-references.php"
